# This cloudbuild.yaml is specific to the bh-admin-panel frontend
steps:
  # 1. Build the Docker image
  # The Docker build arguments (ARG) will pick up these environment variables.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--build-arg'
      - 'NEXT_PUBLIC_API_URL=${_NEXT_PUBLIC_API_URL}'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_SIGN_IN_URL=${_NEXT_PUBLIC_CLERK_SIGN_IN_URL}'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_SIGN_UP_URL=${_NEXT_PUBLIC_CLERK_SIGN_UP_URL}'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${_NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL}'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=${_NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL}'
      - '-t'
      - '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '-f'
      - 'Dockerfile'
      - '.'
    id: 'Build Docker Image'

  # 2. Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}']
    id: 'Push Docker Image'

  # 3. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--quiet'
      - '--allow-unauthenticated'
      # Set runtime environment variables for Cloud Run.
      # CLERK_SECRET_KEY is sensitive and fetched from Secret Manager.
      # NEXT_PUBLIC_ variables are already baked into the client-side JS during build.
      # However, ClerkProvider and other server-side Next.js logic (App Router)
      # also need access to these NEXT_PUBLIC_ variables at runtime on the server.
      - '--set-env-vars=CLERK_SECRET_KEY=$$CLERK_SECRET_KEY_CONTENT,NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY},NEXT_PUBLIC_CLERK_SIGN_IN_URL=${_NEXT_PUBLIC_CLERK_SIGN_IN_URL},NEXT_PUBLIC_CLERK_SIGN_UP_URL=${_NEXT_PUBLIC_CLERK_SIGN_UP_URL},NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${_NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL},NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=${_NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL},NEXT_PUBLIC_API_URL=${_NEXT_PUBLIC_API_URL}'
    id: 'Deploy to Cloud Run'
    secretEnv: ['CLERK_SECRET_KEY_CONTENT']

images:
  - '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/CLERK_SECRET_KEY/versions/latest # Or a specific version number
    env: 'CLERK_SECRET_KEY_CONTENT'

# Default substitution values (can be overridden by trigger)
# These keys should now exactly match your .env.local (for NEXT_PUBLIC ones)
# and how they are referenced in the build args and deploy env vars.
# **IMPORTANT**: Update these default values here to reflect your .env.local,
# AND MORE IMPORTANTLY, override them with *actual production values* in your Cloud Build Trigger settings.
substitutions:
  _SERVICE_NAME: 'bh-admin-panel'
  _REGION: 'us-central1' # Change to your preferred region
  _AR_HOSTNAME: 'us-central1-docker.pkg.dev' # Change if your AR region is different
  _AR_REPOSITORY: 'iot-app-images' # Choose a name for your AR repository

  # --- VALUES FROM YOUR .env.local (use these as reference for trigger settings) ---
  _NEXT_PUBLIC_API_URL: 'https://user-server-bh-168223699989.us-central1.run.app'
  _NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: 'pk_test_Y2xlYXItZm93bC0wLmNsZXJrLmFjY291bnRzLmRldiQ'
  _NEXT_PUBLIC_CLERK_SIGN_IN_URL: '/sign-in'
  _NEXT_PUBLIC_CLERK_SIGN_UP_URL: '/sign-up'
  _NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: '/'
  _NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: '/' # From your .env.local

options:
  logging: CLOUD_LOGGING_ONLY